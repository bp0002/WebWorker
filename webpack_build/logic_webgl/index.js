!function(e){var t={};function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(o,s,function(t){return e[t]}.bind(null,s));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(1),s=n(2),r=n(3),i=n(4),a=n(5),c=n(6),u=n(7);let l;self.onmessage=e=>{let n=e.data;switch(n.CMD){case"INIT":t.main(n.canvas);break;case"MOVE":_(n.x,n.y);break;case"IMAGE":if(l&&!l.isDestroy){const e=new ImageData(n.image,n.width,n.height);o.TextureInstance.loaded(e,n.fname,l)}break;default:console.warn("no such CMD: ",n.CMD)}};const f=(e,t,n)=>{self.postMessage({CMD:"IMAGE",fname:e})};t.main=e=>{const t={};t.canvas=e,l=new o.WebGLInstance(t),o.TextureInstance.loadCall=f;new o.ShaderCfg("01",s.vs_multi_line_diff_speed,s.fs_multi_line_diff_speed),new o.ShaderCfg("02",r.vs_sin_cos,r.fs_sin_cos),new o.ShaderCfg("03",i.vs_multi_line_cross,i.fs_multi_line_cross),new o.ShaderCfg("04",a.vs_polygon,a.fs_polygon);const n=new o.ShaderCfg("05",c.vs_texture,c.fs_texture),_=new o.ShaderCfg("06",u.vs_progress,u.fs_progress),d=(new o.Scene("02",l),new o.Scene("02",l),new o.Scene("03",l),new o.Scene("04",l),new o.Scene("05",l)),h=new o.Scene("06",l),v=new o.DataBufferCfg("01");v.addVertex(-.5,-.5,0),v.addUV(0,0),v.addVertex(.5,-.5,0),v.addUV(1,0),v.addVertex(.5,.5,0),v.addUV(1,1),v.addVertex(-.5,.5,0),v.addUV(0,1),v.addFace(0,1,2),v.addFace(0,2,3),v.update(l.gl);const m=new o.DataBufferCfg("01");m.addVertex(-1,-1,0),m.addUV(0,0),m.addVertex(1,-1,0),m.addUV(1,0),m.addVertex(1,1,0),m.addUV(1,1),m.addVertex(-1,1,0),m.addUV(0,1),m.addFace(0,1,2),m.addFace(0,2,3),m.update(l.gl);const p=new o.DataBufferCfg("03");p.addVertex(-1,-1,0),p.addUV(0,0),p.addVertex(1,-1,0),p.addUV(1,0),p.addVertex(1,20/e.height-1,0),p.addUV(1,1),p.addVertex(-1,20/e.height-1,0),p.addUV(0,1),p.addFace(0,1,2),p.addFace(0,2,3),p.update(l.gl);const g=new o.DataBufferCfg("04");g.addVertex(-1,-1,0),g.addUV(0,0),g.addVertex(-.8,-1,0),g.addUV(1,0),g.addVertex(-.8,-.8,0),g.addUV(1,1),g.addVertex(-1,-.8,0),g.addUV(0,1),g.addFace(0,1,2),g.addFace(0,2,3),g.update(l.gl);const x=new o.Mesh("meshicon",m,n);x.translate[0]=0,x.translate[1]=-.2,x.scale[0]=.5,x.scale[1]=.5,x.texture=l.createTexture("/resources/zhuangshi.png"),d.addMesh(x);const y=new o.Mesh("mesh05",m,n);y.translate[0]=0,y.translate[1]=0,y.scale[0]=.5,y.scale[1]=.5,y.texture=l.createTexture("/resources/choice_light.png"),d.addMesh(y);const b=new o.Mesh("mesh06",p,_);b.translate[0]=0,b.translate[1]=0,b.scale[0]=1,b.scale[1]=1,b.ufloat=.5,h.addMesh(b);const E=new o.Mesh("mesh07",g,n);E.translate[0]=0,E.translate[1]=0,E.scale[0]=1,E.scale[1]=1,E.texture=l.createTexture("/resources/choice_light02.png"),d.addMesh(E),l.renderLoop=e=>{l.clearColor(),d.viewport[0]=0,d.viewport[1]=0,d.viewport[2]=l.width,d.viewport[3]=l.height,d.render(!1),h.viewport[0]=0,h.viewport[1]=0,h.viewport[2]=l.width,h.viewport[3]=l.height,b.ufloat=Math.abs(Math.sin(Date.now()/1e3)),h.render(!1)},l.loop(0)};const _=(e,t)=>{l.u_mouse[0]=e,l.u_mouse[1]=t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.ShaderCfg=class{constructor(e,t,n){this.texActive=!1,this.sname=e,this.fs=n,this.vs=t}getPrograme(e){const t=this.getFSShader(e),n=this.getVSShader(e);if(void 0===this.shader_program&&e.getShaderParameter(t,e.COMPILE_STATUS)){const o=e.createProgram();this.shader_program=o,e.attachShader(this.shader_program,n),e.attachShader(this.shader_program,t),e.linkProgram(this.shader_program)}this.u_mouse_loc=e.getUniformLocation(this.shader_program,"u_mouse"),this.u_time_loc=e.getUniformLocation(this.shader_program,"u_time"),this.u_resolution_loc=e.getUniformLocation(this.shader_program,"u_resolution"),this.u_translate_loc=e.getUniformLocation(this.shader_program,"u_translate"),this.u_scale_loc=e.getUniformLocation(this.shader_program,"u_scale"),this.u_rotate_loc=e.getUniformLocation(this.shader_program,"u_rotate"),this.u_float_loc=e.getUniformLocation(this.shader_program,"u_float"),this.a_position_loc=e.getAttribLocation(this.shader_program,"position"),this.a_uv=e.getAttribLocation(this.shader_program,"a_uv"),this.u_texture=e.getUniformLocation(this.shader_program,"u_sampler"),e.enableVertexAttribArray(this.a_position_loc),e.enableVertexAttribArray(this.a_uv),e.useProgram(this.shader_program),this.texActive&&this.u_texture&&e.uniform1i(this.u_texture,0)}getVSShader(e){return null===e?this.vshader:this.vshader?this.vshader:(this.vshader=e.createShader(e.VERTEX_SHADER),null===this.vshader?this.vshader:void 0===this.vs?this.vshader:(e.shaderSource(this.vshader,this.vs),e.compileShader(this.vshader),e.getShaderParameter(this.vshader,e.COMPILE_STATUS)?this.vshader:(console.error(`ERROR IN 'VERTEX_SHADER' SHADER: ${e.getShaderInfoLog(this.vshader)}`),this.vshader)))}getFSShader(e){return null===e?this.fshader:this.fshader?this.fshader:(this.fshader=e.createShader(e.FRAGMENT_SHADER),null===this.fshader?this.fshader:void 0===this.fs?this.fshader:(e.shaderSource(this.fshader,this.fs),e.compileShader(this.fshader),e.getShaderParameter(this.fshader,e.COMPILE_STATUS)?this.fshader:(console.error(`ERROR IN 'FRAGMENT_SHADER' SHADER: ${e.getShaderInfoLog(this.fshader)}`),this.fshader)))}};t.DataBufferCfg=class{constructor(e){this.vertex_data=[],this.face_data=[],this.uv_data=[],this.vname=e}addVertex(e,t,n){this.vertex_data.push(e,t)}addFace(e,t,n){this.face_data.push(e,t,n)}addUV(e,t){this.uv_data.push(e,t)}update(e){this.activeVertex(e),this.activeUV(e),this.activeFace(e)}activeVertex(e){this.vertex_buffer||(this.vertex_buffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.vertex_buffer),e.bufferData(e.ARRAY_BUFFER,new Float32Array(this.vertex_data),e.STATIC_DRAW))}activeFace(e){this.face_buffer||(this.face_buffer=e.createBuffer(),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.face_buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array(this.face_data),e.STATIC_DRAW))}activeUV(e){this.uv_buffer||(this.uv_buffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.uv_buffer),e.bufferData(e.ARRAY_BUFFER,new Float32Array(this.uv_data),e.STATIC_DRAW))}};t.Mesh=class{constructor(e,t,n){this.translate=[0,0,0],this.scale=[1,1,1],this.rotate=[0,0,0],this.ufloat=0,this.id=e,this.dataBufferCfg=t,this.shaderCfg=n,this.texture=null}render(e){const t=e.engine.gl,n=this.shaderCfg;this.texture&&(this.shaderCfg.texActive=this.texture.active(),!this.shaderCfg.texActive)||(n.getPrograme(t),n.u_mouse_loc&&t.uniform2fv(n.u_mouse_loc,e.engine.u_mouse),n.u_time_loc&&t.uniform1f(n.u_time_loc,.001*e.engine.timestamp),n.u_float_loc&&t.uniform1f(n.u_float_loc,this.ufloat),n.u_resolution_loc&&t.uniform2f(n.u_resolution_loc,e.engine.width,e.engine.height),n.u_translate_loc&&t.uniform3f(n.u_translate_loc,this.translate[0],this.translate[1],this.translate[2]),n.u_scale_loc&&t.uniform3f(n.u_scale_loc,this.scale[0],this.scale[1],this.scale[2]),n.u_rotate_loc&&t.uniform3f(n.u_rotate_loc,this.rotate[0],this.rotate[1],this.rotate[2]),n.a_position_loc>=0&&(t.bindBuffer(t.ARRAY_BUFFER,this.dataBufferCfg.vertex_buffer),t.vertexAttribPointer(n.a_position_loc,2,t.FLOAT,!1,8,0)),n.a_uv>=0&&(t.bindBuffer(t.ARRAY_BUFFER,this.dataBufferCfg.uv_buffer),t.vertexAttribPointer(n.a_uv,2,t.FLOAT,!1,8,0)),this.dataBufferCfg.face_buffer&&(t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.dataBufferCfg.face_buffer),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)),t.flush())}};t.Scene=class{constructor(e,t){this.viewport=[0,0,0,0],this.meshMap=new Map,this.sname=e,this.engine=t}addMesh(e){this.meshMap.set(e.id,e)}render(e){const t=this.engine.gl;t.viewport(this.viewport[0],this.viewport[1],this.viewport[2],this.viewport[3]),e&&t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE),this.meshMap.forEach(e=>{e.render(this)})}};class o{constructor(e,t){this.fname=e,this._engine=t,this._tex=null,t.addTexture(this),o.loadCall(e,t,o.loaded)}active(){let e=!1;const t=this._engine.gl;return this._tex&&(t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this._tex),e=!0),e}remove(){this._engine.delTexture(this)}}o.loadCall=(e,t,n)=>{},o.loaded=(e,t,n)=>{const o=n.getTexture(t);if(o){const t=n.gl,s=t.createTexture();t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST_MIPMAP_LINEAR),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null),o._tex=s}},t.TextureInstance=o;class s{constructor(e){this.u_mouse=[0,0],this.timestamp=0,this.sceneMap=new Map,this.textureMap=new Map,this._isDestroy=!1,this.loop=e=>{this.timestamp=e,this.renderLoop(e),setTimeout(this.loop,20)},this.canvas=e.canvas,this.width=this.canvas.width,this.height=this.canvas.height,this.gl=s.ctxInitFunc(this.canvas)}get isDestroy(){return this._isDestroy}static ctxInitFunc(e){let t=null;try{for(var n=0;n<s.contentModes.length;++n){try{t=e.getContext(s.contentModes[n],{alpha:!0,antialias:!0})}catch(e){}if(t)break}}catch(e){console.warn("There is not webgl compatible :( ")}return t}createTexture(e){let t=this.textureMap.get(e);return void 0===t&&(t=new o(e,this)),t}addTexture(e){this.textureMap.set(e.fname,e)}getTexture(e){return this.textureMap.get(e)}delTexture(e){this.textureMap.delete(e.fname),this.gl.deleteTexture(e)}addScene(e){this.sceneMap.set(e.sname,e)}clearColor(){const e=this.gl;e.viewport(0,0,this.width,this.height),e.clearColor(0,0,0,0)}renderLoop(e){}destroy(){this._isDestroy=!0,this.textureMap.forEach(e=>{this.delTexture(e)})}}s.uniforms_1f=["u_time"],s.uniforms_2fv=["u_mouse"],s.uniforms_2f=["u_resolution"],s.contentModes=["webgl2","webgl","experimental-webgl","webkit-3d","moz-webgl"],t.WebGLInstance=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.vs_multi_line_diff_speed="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute   vec2    position;\nvarying     vec2    surfacePosition;\n\nvoid main( void ){\n    gl_Position = vec4( position, 0., 1. );\n    surfacePosition      = position;\n}\n",t.fs_multi_line_diff_speed="\n// Author @patriciogv - 2015\n// Title: Truchet - 10 print\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979323846\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec3 u_translate;\nuniform vec3 u_scale;\nuniform vec3 u_rotate;\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*2.0));\n    if (_index > 0.75) {\n        _st = vec2(1.0) - _st;\n    } else if (_index > 0.5) {\n        _st = vec2(1.0-_st.x,_st.y);\n    } else if (_index > 0.25) {\n        _st = 1.0-vec2(1.0-_st.x,_st.y);\n    }\n    return _st;\n}\nfloat circle(vec2 xy, vec2 center, float radius, float smooth_edge) {\n    float dist = distance(xy,center);\n    dist = smoothstep(radius, radius + smooth_edge, dist);\n    return dist;\n}\n\nvoid main() {\n    float count = 20.0;\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    st -= u_translate.xy;\n    st *= 1.0/u_scale.xy;\n    st *= count;\n\tst.x -= u_time * 2.0 *  random(vec2(floor(st).y,1.0));\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    float speed = random(vec2(ipos.y));\n\n    float x_f = random(vec2(ipos.x, 0));\n    float y_f = random(vec2(0, ipos.y));\n\n    float color = 0.0;\n    color = random(vec2(x_f, y_f));\n\tcolor =\n    \t1.0 - (1.0 - circle(fract(st), vec2(0.5), 0.25, 0.1)) * color\n    \t;\n    vec4 f_color = vec4(vec3(color),1.0);\n    f_color.r = color < 1.0 ? 0.0 : 1.0;\n    f_color.g = color < 1.0 ? 0.0 : 1.0;\n    f_color.b = color < 1.0 ? color : 1.0;\n    f_color.a = color < 1.0 ? color : 0.0;\n\n    gl_FragColor = f_color;\n}\n"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.vs_sin_cos="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute   vec2    position;\nvarying     vec2    surfacePosition;\n\nvoid main( void ){\n    gl_Position = vec4( position, 0., 1. );\n    surfacePosition      = position;\n}\n",t.fs_sin_cos="\n// Author @patriciogv - 2015\n// Title: Truchet - 10 print\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec3 u_translate;\nuniform vec3 u_scale;\nuniform vec3 u_rotate;\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    st -= u_translate.xy;\n    st *= 1.0/u_scale.xy;\n    vec3 color = vec3(0.0);\n\n    vec2 pos = vec2(0.5)-st;\n\n    float r = distance(pos, vec2(0.0,0.0))*2.0;\n    float a = atan(pos.y,pos.x);\n    float xxx = floor(u_time / 10.0) * 10.0 - u_time ;\n    float yyy = floor(u_time / 20.0) * 20.0 - u_time ;\n    float f = cos(a*0.5);\n    // f = abs(cos(a*3.));\n    // f = abs(cos(a*2.5))*.5+.3;\n    // f = abs(cos(a*12.)*sin(a*3.))*.8+.1;\n    // f = smoothstep(-.5,1., cos(a*10.))*0.2+0.5;\n    f = abs( cos(a*xxx) * sin(a*yyy) ) *.9 + .2;\n\n    color = vec3( 1.-smoothstep(f,f+0.005,r) );\n\n    gl_FragColor = vec4(color, 1.0);\n}\n"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.vs_multi_line_cross="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute   vec2    position;\nvarying     vec2    surfacePosition;\n\nvoid main( void ){\n    gl_Position = vec4( position, 0., 1. );\n    surfacePosition      = position;\n}\n",t.fs_multi_line_cross="\n// Author @patriciogv - 2015\n// Title: Truchet - 10 print\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform vec3 u_translate;\nuniform vec3 u_scale;\nuniform vec3 u_rotate;\n\nvec2 brickTile(vec2 _st, float _zoom){\n    _st *= _zoom;\n\n    // Here is where the offset is happening\n    // _st.x += step(1., mod(_st.y,2.0)) * 0.5;\n\n    return fract(_st);\n}\n\nfloat box(vec2 _st, vec2 _size){\n    _size = vec2(0.5)-_size*0.5;\n    vec2 uv = smoothstep(_size,_size+vec2(1e-4),_st);\n    uv *= smoothstep(_size,_size+vec2(1e-4),vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\nfloat circle(vec2 xy, vec2 center, float radius, float smooth_edge) {\n    float dist = distance(xy,center);\n    dist = smoothstep(radius, radius + smooth_edge, dist);\n    return dist;\n}\n\nvoid main(void){\n    float count = 20.0;\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    st -= u_translate.xy;\n    st *= 1.0/u_scale.xy;\n\n    float sin_t = sin(u_time * 3.14 / 10.0);\n    float cos_t = cos(u_time * 3.14 / 10.0);\n    float col_flag= mod(st.y * count, 2.0) < 1.0 ? 1.0 : -1.0;\n    float row_flag= mod(st.x * count, 2.0) < 1.0 ? 1.0 : -1.0;\n    st += vec2(\n        col_flag * ( sin_t * cos_t < 0.0 ? cos_t : 0.0 ) * 0.5,\n        row_flag * ( sin_t * cos_t > 0.0 ? sin_t : 0.0 ) * 0.5);\n    vec3 color = vec3(0.0);\n\n    // Modern metric brick of 215mm x 102.5mm x 65mm\n    // http://www.jaharrison.me.uk/Brickwork/Sizes.html\n    // st /= vec2(2.15,0.65)/1.5;\n\n    // Apply the brick tiling\n    st = brickTile(st,count);\n\n    color = vec3(circle(st,vec2(0.5,0.5),0.4, 0.05));\n\n    // Uncomment to see the space coordinates\n    // color = vec3(st,0.0);\n\n    gl_FragColor = vec4(color,1.0);\n}\n"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.vs_polygon="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute   vec2    position;\nvarying     vec2    surfacePosition;\n\nvoid main( void ){\n    gl_Position = vec4( position, 0., 1. );\n    surfacePosition      = position;\n}\n",t.fs_polygon="\n// Author @patriciogv - 2015\n// Title: Truchet - 10 print\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979323846\n#define TWO_PI 6.2448530717958647692\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\nuniform vec3 u_translate;\nuniform vec3 u_scale;\nuniform vec3 u_rotate;\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat shape(vec2 st, float N){\n    st = st*2.-1.;\n    float a = atan(st.x,st.y)+PI;\n    float r = TWO_PI/N;\n    return abs(cos(floor(.5+a/r)*r-a)*length(st));\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    st -= u_translate.xy;\n    st *= 1.0/u_scale.xy;\n\n    // move space from the center to the vec2(0.0)\n    st -= vec2(0.5);\n    // rotate the space\n    st = rotate2d( u_rotate.z ) * st;\n    // move it back to the original place\n    st += vec2(0.5);\n\n    vec3 color = vec3(0.0);\n\n    color = vec3( smoothstep(.5, .5 + .005, shape(st,6.0)) );\n\n    gl_FragColor = vec4(color, 1.0);\n}\n"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.vs_texture="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute   vec2    position;\nvarying     vec2    surfacePosition;\nattribute   vec2    a_uv;\nvarying     vec2    vUV;\n\nvoid main( void ){\n    gl_Position = vec4( position, 0., 1. );\n    surfacePosition      = position;\n    vUV = a_uv;\n}\n",t.fs_texture="\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying  vec2 vUV;\nuniform  sampler2D u_sampler;\n\nvoid main(void){\n    // [ 0, 0, 0, 1 ]  rgba颜色向量\n    // gl_FragColor = vec4( vColor, 1. );\n    gl_FragColor = texture2D( u_sampler, vUV );\n}\n"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.vs_progress="\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute   vec2    position;\n\nvoid main( void ){\n    gl_Position = vec4( position, 0., 1. );\n}\n",t.fs_progress="\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform  float u_float;\nuniform  vec2 u_resolution;\n\nvoid main(void){\n    vec2 st = gl_FragCoord.xy / u_resolution.xy;\n    vec3 color = st.x < u_float ? vec3(0.0, 0.8, 0.0) : vec3(0.2, 0.2, 0.2);\n    // 20 对应js层进度条高度\n    color = st.y > (20.0 / u_resolution.y / 2.0) ? vec3(0.0) : color;\n\n    float alpha = st.y > (20.0 / u_resolution.y / 2.0) ? 0.0 : 0.8;\n    alpha = st.x < u_float ? alpha : 0.8;\n\n    gl_FragColor = vec4( color, alpha );\n}\n"}]);